{"version":3,"sources":["reducks/products/actions.js","reducks/store/initialState.js","reducks/products/reducers.js","reducks/users/actions.js","reducks/users/reducers.js","assets/theme.js","reducks/users/selectors.js","firebase/index.js","firebase/config.js","reducks/store/store.js","components/Products/CartListItem.jsx","components/Products/ImagePreview.jsx","components/Products/ImageArea.jsx","assets/img/src/no_image.png","components/Products/ImageSwiper.jsx","components/UIkit/GreyButton.jsx","components/UIkit/PrimaryButton.jsx","components/UIkit/TextDetail.jsx","components/UIkit/TextInput.jsx","components/UIkit/SelectBox.jsx","components/Products/OrderHistoryItem.jsx","components/Products/OrderedProducts.jsx","reducks/products/operations.js","components/Products/ProductCard.jsx","components/Products/SetSizeArea.jsx","components/Products/SizeTable.jsx","templates/CartList.jsx","reducks/users/operations.js","templates/OrderConfirm.jsx","templates/OrderHistory.jsx","templates/ProductEdit.jsx","reducks/products/selectors.js","templates/ProductList.jsx","templates/SignIn.jsx","templates/SignUp.jsx","templates/Reset.jsx","templates/ProductDetail.jsx","function/common.js","Auth.jsx","Router.jsx","components/Header/ClosableDrawer.jsx","assets/img/icons/logo2.png","components/Header/Header.jsx","components/Header/HeaderMenus.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["DELETE_PRODUCT","FETCH_PRODUCTS","initialState","products","list","users","cart","isSignedIn","orders","role","uid","username","ProductsReducer","state","action","type","Actions","payload","FETCH_ORDERS_HISTORY","FETCH_PRODUCTS_IN_CART","fetchProductsInCartAction","SIGN_IN","signInAction","userState","SIGN_OUT","UsersReducer","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","grey","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","usersSelector","getIsSignedIn","createSelector","getOrdersHistory","getProductsInCart","getUserId","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","history","auth","db","firestore","storage","FirebaseTimestamp","functions","Timestamp","useStyles","makeStyles","height","image","objectFit","margin","width","text","CartListItem","props","classes","selector","useSelector","product","images","path","price","toLocaleString","ListItem","className","ListItemAvatar","src","alt","ListItemText","name","size","IconButton","onClick","id","collection","doc","delete","removeProductFromCart","cartId","Divider","ImagePreview","icon","ImageArea","deleteImage","useCallback","a","window","confirm","newImages","filter","setImages","ref","child","uploadImage","event","file","target","files","blob","Blob","S","fileName","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","uploadTask","put","then","snapshot","getDownloadURL","downloadURL","newImage","prevState","onChange","ImageSwiper","useState","pagination","el","clickable","dynamicBullets","navigation","nextEl","prevEl","loop","params","NoImage","backgroundColor","fontSize","marginButtom","GreyButton","Button","button","variant","label","color","PrimaryButton","row","display","flexFlow","marginBottom","marginLeft","marginRight","value","fontWeight","TextDetail","TextInput","TextField","fullWidth","multiline","required","rows","formControl","minWidth","SelectBox","FormControl","InputLabel","Select","select","options","option","MenuItem","OrderHistoryItem","date","order","orderedDatetime","updated_at","toDate","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","shippingDate","dateToString","shipping_date","amount","background","OrderedProducts","dispatch","useDispatch","goToProductDetail","push","List","productsRef","root","breakpoints","down","up","content","padding","textAlign","paddingBottom","media","paddingTop","ProductCard","anchorEl","setAnchorEl","handleClose","Card","CardMedia","title","CardContent","Typography","component","currentTarget","Menu","keepMounted","open","Boolean","onClose","getState","nextProducts","checkIcon","float","iconCell","SetSizeArea","index","setIndex","setSize","quantity","setQuantity","inputSize","inputQuantity","useMemo","sizes","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","item","i","editSize","deleteIndex","newSizes","setSizes","deleteSize","addSize","SizeTable","scope","addProduct","maxWidth","CartList","productsInCart","goToOrder","backToTop","signOut","detailBox","orderBox","border","borderRadius","boxShadow","OrderConfirm","subTotal","reduce","sum","shippingFee","tax","total","userRef","timestamp","now","soldOutProducts","batch","productId","get","data","updatedSizes","update","errorMessage","alert","commit","orderRef","fromDate","Date","setDate","created_at","set","catch","orderProduct","orderList","OrderHistory","useEffect","orderBy","snapshots","forEach","ProductEdit","location","pathname","split","setName","description","setDescription","category","setCategory","categories","setCategories","gender","setGender","setPrice","inputName","inputDescription","inputPrice","fullwidth","parseInt","merge","error","Error","saveProduct","getProducts","ProductList","query","router","search","test","where","productList","fetchProducts","SignIn","email","setEmail","password","setPassword","inputEmail","inputPassword","signInWithEmailAndPassword","result","user","signIn","SignUp","setUsername","confirmPassword","setConfirmPassword","inputUsername","inputConfirmPassword","confirmPassWord","createUserWithEmailAndPassword","userInitialdata","signUp","Reset","sendPasswordResetEmail","resetPassword","sliderBox","detail","ProductDetail","setProduct","selectedSize","addedProduct","added_at","cartRef","HTMLReactParser","replace","Auth","children","onAuthStateChanged","Router","exact","drawer","flexShrink","toolbar","mixins","drawerPapper","searchField","alignItems","ClosableDrawer","container","keyword","setKeyword","inputKeyWord","selectMenu","func","filters","setFilters","menus","Drawer","anchor","e","paper","ModalProps","onKeyDown","menu","ListItemIcon","flexGrow","menuBar","toolBar","iconButoons","Header","setOpen","handleDrawerToggle","key","AppBar","position","logo","HeaderMenus","unsubscribe","onSnapshot","docChanges","change","findIndex","Badge","badgeContent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","History","store","createLogger","collapsed","diff","reduxCreateStore","combineReducers","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab1a1696.chunk.js","sourcesContent":["export const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const deleteProductAction = (products) => {\n    return {\n        type: \"DELETE_PRODUCT\",\n        payload: products\n    }\n}\n\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const fetchProductsAction = (products) => {\n    return {\n        type: \"FETCH_PRODUCTS\",\n        payload: products\n    }\n}","const initialState = {\n    products: {\n        list: []\n    },\n    users: {\n        cart: [],\n        isSignedIn: false,\n        orders: [],\n        role: \"\",\n        uid: \"\",\n        username: \"\"\n    }\n};\n\nexport default initialState;","import * as Actions from './actions';\nimport initialState from '../store/initialState';\n\nexport const ProductsReducer = (state = initialState.products, action) => {\n    switch (action.type) {\n        case Actions.DELETE_PRODUCT:\n            return {\n                ...state,\n                list: action.payload\n            };\n        case Actions.FETCH_PRODUCTS:\n            return {\n                ...state,\n                list: action.payload\n            };\n        default:\n        return state\n    }\n}","export const FETCH_ORDERS_HISTORY = \"FETCH_ORDERS_HISTORY\";\nexport const fetchOrdersHistoryAction = (history) => {\n    return {\n        type: \"FETCH_ORDERS_HISTORY\",\n        payload: history\n    }\n};\n\nexport const FETCH_PRODUCTS_IN_CART = \"FETCH_PRODUCTS_IN_CART\";\nexport const fetchProductsInCartAction = (products) => {\n    return {\n        type: \"FETCH_PRODUCTS_IN_CART\",\n        payload: products\n    }\n};\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState) => {\n    return {\n        type: \"SIGN_IN\",\n        payload: {\n            isSignedIn: true,\n            role: userState.role,\n            uid: userState.uid,\n            username: userState.username\n        }\n    }\n};\n\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n    return {\n        type: \"SIGN_OUT\",\n        payload: {\n            isSignedIn: false,\n            role: \"\",\n            uid: \"\",\n            username: \"\"\n        }\n    }\n};","import * as Actions from './actions';\nimport initialState from '../store/initialState';\n\nexport const UsersReducer = (state = initialState.users, action) => {\n    switch (action.type) {\n        case Actions.FETCH_ORDERS_HISTORY:\n            return {\n                ...state,\n                orders: [...action.payload]\n            }\n        case Actions.FETCH_PRODUCTS_IN_CART:\n            return {\n                ...state,\n                cart: [...action.payload]\n            }\n        case Actions.SIGN_IN: \n            return {\n                ...state,\n                ...action.payload\n            }\n        case Actions.SIGN_OUT: \n            return {\n                ...action.payload\n            }\n        default:\n            return state\n    }\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\n// Pick colors on https://material.io/resources/color/#!/\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#88ffff',\n      main: '#4dd0e1',\n      dark: '#009faf',\n      contrastText: '#000',\n    },\n    secondary: {\n      light: '#ffff81',\n      main: '#ffd54f',\n      dark: '#c8a415',\n      contrastText: '#000',\n    },\n    grey: {\n      50: \"#fafafa\",\n      100: \"#f5f5f5\",\n      200: \"#eeeeee\",\n      300: \"#e0e0e0\",\n      400: \"#bdbdbd\",\n      500: \"#9e9e9e\",\n      600: \"#757575\",\n      700: \"#616161\",\n      800: \"#424242\",\n      900: \"#212121\",\n      A100: \"#d5d5d5\",\n      A200: \"#aaaaaa\",\n      A400: \"#303030\",\n      A700: \"#616161\"\n    }\n  },\n});","import {createSelector} from 'reselect';\n\nconst usersSelector = (state) => state.users;\n\nexport const getIsSignedIn = createSelector(\n    [usersSelector],\n    state => state.isSignedIn\n)\n\nexport const getOrdersHistory = createSelector(\n    [usersSelector],\n    state => state.orders\n)\n\nexport const getProductsInCart = createSelector(\n    [usersSelector],\n    state => state.cart\n)\n\nexport const getUserId = createSelector(\n    [usersSelector],\n    state => state.uid\n)\n\nexport const getUsername = createSelector(\n    [usersSelector],\n    state => state.username\n)\n","import firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport 'firebase/functions'\nimport {firebaseConfig} from \"./config\";\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const functions = firebase.functions();\nexport const FirebaseTimestamp = firebase.firestore.Timestamp;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyCfGmPCn32y5zF9ML8IjfgMyjCWhafwCs4\",\n    authDomain: \"ecapp-xx.firebaseapp.com\",\n    projectId: \"ecapp-xx\",\n    storageBucket: \"ecapp-xx.appspot.com\",\n    messagingSenderId: \"591112577216\",\n    appId: \"1:591112577216:web:b6c907520d93e5327e0d25\",\n    measurementId: \"G-4297XJCKRH\"\n  };","import {\n    createStore as reduxCreateStore,\n    combineReducers,\n    applyMiddleware\n} from 'redux';\nimport {createLogger} from \"redux-logger/src\";\nimport {connectRouter, routerMiddleware} from \"connected-react-router\";\nimport thunk from 'redux-thunk';\n\nimport {ProductsReducer} from \"../products/reducers\";\nimport {UsersReducer} from '../users/reducers';\n\nexport default function createStore(history) {\n    const logger = createLogger({\n        collapsed: true,\n        diff: true\n    });\n\n    return reduxCreateStore(\n        combineReducers( {\n            products: ProductsReducer,\n            router: connectRouter(history),\n            users: UsersReducer\n        }),\n        applyMiddleware(\n            routerMiddleware(history),\n            thunk\n        )\n    )\n}","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport {makeStyles} from \"@material-ui/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {useSelector} from \"react-redux\";\nimport {getUserId} from \"../../reducks/users/selectors\";\nimport {db} from \"../../firebase/index\"\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        height: 128\n    },\n    image: {\n        objectFit: 'cover',\n        margin: 16,\n        height: 96,\n        width: 96\n    },\n    text: {\n        width: '100%'\n    }\n}))\n\nconst CartListItem = (props) => {\n    const classes = useStyles();\n    const selector = useSelector(state => state);\n\n    const image = props.product.images[0].path;\n    const price = props.product.price.toLocaleString();\n\n    const removeProductFromCart = (id) => {\n        const uid = getUserId(selector);\n        return db.collection('users').doc(uid).collection('cart').doc(id).delete()\n    };\n\n\n    return (\n        <>\n            <ListItem className={classes.list}>\n                <ListItemAvatar>\n                    <img className={classes.image} src={image} alt=\"商品のTOP画像\" />\n                </ListItemAvatar>\n                <div className={classes.text}>\n                    <ListItemText primary={props.product.name} secondary={\"サイズ：\" + props.product.size} />\n                    <ListItemText primary={\"¥\"+price} />\n                </div>\n                <IconButton onClick={() => removeProductFromCart(props.product.cartId)} >\n                    <DeleteIcon />\n                </IconButton>\n            </ListItem>\n            <Divider />\n        </>\n    );\n}\nexport default CartListItem","import React from 'react';\n\nconst ImagePreview = (props) => {\n    return (\n        <div className=\"p-media__thumb\" onClick={() => props.delete(props.id)}>\n            <img alt=\"プレビュー画像\" src={props.path} />\n        </div>\n    )\n}\n\nexport default ImagePreview;","import React, { useCallback } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport { makeStyles } from '@material-ui/styles';\nimport {storage} from '../../firebase/index';\nimport ImagePreview from './ImagePreview';\n\nconst useStyles = makeStyles({\n    icon: {\n        height: 48,\n        width: 48\n    }\n})\n\nconst ImageArea = (props) => {\n    const classes = useStyles();\n\n    const deleteImage = useCallback(async(id) => {\n        const ret = window.confirm('この画像を削除しますか？')\n        if(!ret) {\n            return false\n        } else {\n            const newImages = props.images.filter(image => image.id !== id);\n            props.setImages(newImages);\n            return storage.ref('images').child(id).delete()\n        }\n    }, [props.images])\n\n    const uploadImage = useCallback((event) => {\n        const file = event.target.files;\n        let blob = new Blob(file, {type: \"image/jpeg\"});\n\n        //Generate random 16 digits strings\n        const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N = 16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n) => S[n%S.length]).join('')\n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n\n        uploadTask.then(() => {\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n            });\n        })\n    }, [props.setImages])\n    return (\n        <div>\n            <div className=\"p-grid__list-images\">\n                {props.images.length > 0 && (\n                    props.images.map(image => <ImagePreview delete={deleteImage} id={image.id} path={image.path} key={image.id} />)\n                )}\n            </div>\n            <div className=\"u-text-right\">\n                <span>商品画像を保存する</span>\n                <IconButton className={classes.icon}>\n                    <label>\n                        <AddPhotoAlternateIcon />\n                        <input className=\"u-display-none\" type=\"file\" id=\"image\" \n                               onChange={(event) => uploadImage(event)}\n                         />    \n                    </label>\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageArea","export default __webpack_public_path__ + \"static/media/no_image.1a2d0029.png\";","import React, { useState } from 'react';\nimport Swiper from \"react-id-swiper\";\nimport NoImage from \"../../assets/img/src/no_image.png\";\nimport 'swiper/css/swiper.css';\n\nconst ImageSwiper = (props) => {\n    const [params] = useState({\n        pagination: {\n            el: '.swiper-pagination',\n            type: 'bullets',\n            clickable: true,\n            dynamicBullets: true\n        },\n        navigation: {\n            nextEl: '.swiper-button-next',\n            prevEl: '.swiper-button-prev'\n        },\n        loop: true\n    })\n\n    const images = props.images\n\n    return (\n        <Swiper {...params}>\n            {images.length === 0 ? (\n                <div className=\"p-media__thumb\">\n                    <img src={NoImage} alt=\"no image\" />\n                </div>\n            ) : (\n                images.map(image => (\n                    <div className=\"p-media__thumb\">\n                        <img src={image.path} alt=\"商品情報\" />\n                    </div>\n                ))\n            )}\n        </Swiper>\n    )\n};\n\nexport default ImageSwiper;\n","import React from 'react';\nimport Button from '@material-ui/core/Button'\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    \"button\": {\n        backgroundColor: theme.palette.grey[\"300\"],\n        fontSize: 16,\n        height: 48,\n        marginButtom: 16,\n        width: 256\n    }\n}))\n\n\nconst GreyButton = (props) => {\n    const classes = useStyles();\n    return (\n        <Button className={classes.button} variant=\"contained\" onClick={() => props.onClick()}>\n            {props.label}\n        </Button>\n    )\n}\n\nexport default GreyButton;","import React from 'react';\nimport Button from '@material-ui/core/Button'\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n    \"button\": {\n        backgroundColor: \"#4dd0e1\",\n        color: \"#000\",\n        fontSize: 16,\n        height: 48,\n        marginButtom: 16,\n        width: 256\n    }\n})\n\n\nconst PrimaryButton = (props) => {\n    const classes = useStyles();\n    return (\n        <Button className={classes.button} variant=\"contained\" onClick={() => props.onClick()}>\n            {props.label}\n        </Button>\n    )\n}\n\nexport default PrimaryButton;","import React from 'react';\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n    row: {\n        display: 'flex',\n        flexFlow: 'row wrap',\n        marginBottom: 16\n    },\n    label: {\n        marginLeft: 0,\n        marginRight: 'auto'\n    },\n    value: {\n        fontWeight: 600,\n        marginLeft: 'auto',\n        marginRight: 0\n    }\n});\n\nconst TextDetail = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.row}>\n            <div className={classes.label}>\n                {props.label}\n            </div>\n            <div className={classes.value}>\n                {props.value}\n            </div>\n        </div>\n    )\n}\n\nexport default TextDetail;","import React from 'react';\nimport TextField from \"@material-ui/core/TextField\";\n\nconst TextInput = (props) => {\n    return (\n        <TextField \n            fullWidth={props.fullWidth}\n            label={props.label}\n            margin=\"dense\"\n            multiline={props.multiline}\n            required={props.required}\n            rows={props.rows}\n            value={props.value}\n            type={props.type}\n            onChange={props.onChange}\n        />\n    )\n}\n\nexport default TextInput;","import React from 'react';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    formControl: {\n        marginBottom: 16,\n        minWidth: 128,\n        width: \"100%\"\n    }\n})\n\nconst SelectBox = (props) => {\n    const classes = useStyles();\n\n    return (\n        <FormControl className={classes.formControl}>\n            <InputLabel>{props.label}</InputLabel>\n            <Select \n                required={props.required} value={props.value}\n                onChange={(event) => props.select(event.target.value)}\n            >\n                {props.options.map((option) => (\n                    <MenuItem key={option.id} value={option.id}>{option.name}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default SelectBox;","import React from 'react';\nimport Divider from \"@material-ui/core/Divider\";\nimport {TextDetail} from \"../UIkit\"\nimport {OrderedProducts} from \"./index\"\n\nconst datetimeToString = (date) => {\n    return date.getFullYear() + '-'\n    + ('00' + (date.getMonth() + 1)).slice(-2) + \"-\"\n    + ('00' + date.getDate()).slice(-2) + \"-\"\n    + ('00' + date.getHours()).slice(-2) + \":\"\n    + ('00' + date.getMinutes()).slice(-2) + \":\"\n    + ('00' + date.getSeconds()).slice(-2)\n}\n\nconst dateToString = (date) => {\n    return date.getFullYear() + '-'\n    + ('00' + (date.getMonth() + 1)).slice(-2) + \"-\"\n    + ('00' + date.getDate()).slice(-2)\n}\n\nconst OrderHistoryItem = (props) => {\n    const order = props.order;\n    const orderedDatetime = datetimeToString(order.updated_at.toDate());\n    const shippingDate = dateToString(order.shipping_date.toDate());\n    const price = \"¥\" + order.amount.toLocaleString();\n\n    return (\n        <div>\n            <div className=\"module-spacer--small\" />\n            <TextDetail label={\"注文ID\"} value={order.id} />\n            <TextDetail label={\"注文日時\"} value={orderedDatetime} />\n            <TextDetail label={\"発送予定日\"} value={shippingDate} />\n            <TextDetail label={\"注文金額\"} value={price} />\n            {order.products.length > 0 && (\n                <OrderedProducts products={order.products} />\n            )}\n            <div className=\"module-spacer--extra-small\" />\n            <Divider />\n        </div>\n    )\n}\n\nexport default OrderHistoryItem","import React from 'react';\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Divider from \"@material-ui/core/Divider\"\nimport {makeStyles} from \"@material-ui/styles\"\nimport {PrimaryButton} from \"../UIkit\"\nimport {useDispatch} from \"react-redux\"\nimport {push} from \"connected-react-router\"\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles({\n    list: {\n        background: '#fff',\n        height: 'auto'\n    },\n    image: {\n        objectFit: 'cover',\n        margin: '8px 16px 8px 0',\n        height: 96,\n        width: 96\n    },\n    text: {\n        width: '100%'\n    }\n})\n\nconst OrderedProducts = (props) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const products = props.products;\n\n    const goToProductDetail = useCallback((id) => {\n        dispatch(push('/product/' + id))\n    }, [])\n\n    return(\n        <List>\n            {products.map(product => (\n                <>\n                    <ListItem className={classes.list} key={product.id}>\n                        <ListItemAvatar>\n                            <img\n                                className={classes.image}\n                                src={product.images[0].path}\n                                alt={\"Ordered Product\"}\n                            />\n                        </ListItemAvatar>\n                        <div className={classes.text}>\n                            <ListItemText\n                                primary={product.name}\n                                secondary={\"サイズ: \" + product.size}\n                            />\n                            <ListItemText\n                                primary={\"¥\" + product.price.toLocaleString()}\n                            />\n                        </div>\n                        <PrimaryButton\n                            label={\"商品情報を見る\"}\n                            onClick={() => goToProductDetail(product.id)}\n                        />\n                    </ListItem>\n                    <Divider />\n                </>\n            ))}\n        </List>\n    )\n}\n\nexport default OrderedProducts;","import { FirebaseTimestamp, db } from \"../../firebase\"\nimport { push } from \"connected-react-router\"\nimport {fetchProductsAction, deleteProductAction} from'./actions';\n\nconst productsRef = db.collection('products');\n\nexport const deleteProduct = (id) => {\n    return async (dispatch, getState) => {\n        productsRef.doc(id).delete()\n            .then(() => {\n                const prevProducts = getState().products.list;\n                const nextProducts = prevProducts.filter(product => product.id !== id)\n                dispatch(deleteProductAction(nextProducts))\n            })\n    }\n}\n\nexport const fetchProducts = (gender, category) => {\n    return async (dispatch) => {\n        let query = productsRef.orderBy('updated_at', 'desc')\n        query = (gender !== \"\") ? query.where('gender', '==', gender) : query;\n        query = (category !== \"\") ? query.where('category', '==', category) : query;\n        \n        query.get()\n            .then(snapshots => {\n                    const productList = []\n                snapshots.forEach(snapshot => {\n                    const product = snapshot.data();\n                    productList.push(product)\n                })\n                dispatch(fetchProductsAction(productList))\n            })\n    }\n}\n\nexport const orderProduct = (productsInCart, amount) => {\n    return async (dispatch, getState) => {\n        const uid = getState().users.uid;\n        const userRef = db.collection('users').doc(uid);\n        const timestamp = FirebaseTimestamp.now();\n\n        let products = [],\n            soldOutProducts = [];\n\n        const batch = db.batch()\n\n        for(const product of productsInCart) {\n            const snapshot = await productsRef.doc(product.productId).get();\n            const sizes = snapshot.data().sizes;\n\n            const updatedSizes = sizes.map(size => {\n                if (size.size === product.size) {\n                    if (size.quantity === 0) {\n                        soldOutProducts.push(product.name);\n                        return size\n                    }\n                    return {\n                        size: size.size,\n                        quantity: size.quantity - 1\n                    }\n                } else {\n                    return size\n                }\n            })\n\n            products.push ({\n                id: product.productId,\n                images: product.images,\n                name: product.name,\n                price: product.price,\n                size: product.size\n            });\n\n            batch.update(\n                productsRef.doc(product.productId),\n                    {sizes: updatedSizes}\n            );\n\n            batch.delete(\n                userRef.collection('cart').doc(product.cartId)\n            )\n        }\n\n        if (soldOutProducts.length > 0) {\n            const errorMessage = (soldOutProducts.length > 1) ?\n                                 soldOutProducts.join('と'):\n                                 soldOutProducts[0];\n            alert('大変申し訳ありません。' + errorMessage + 'が在庫切れになったため、注文処理を中断しました。')\n            return false\n        }else {\n            batch.commit()\n                .then(() => {\n                    const orderRef = userRef.collection('orders').doc();\n                    const date = timestamp.toDate();\n                    const shippingDate = FirebaseTimestamp.fromDate(new Date(date.setDate(date.getDate() + 3)))\n\n                    const history = {\n                        amount: amount,\n                        created_at: timestamp,\n                        id: orderRef.id,\n                        products: products,\n                        shipping_date: shippingDate,\n                        updated_at: timestamp\n                    }\n\n                    orderRef.set(history);\n                    dispatch(push('/order/complete'))\n                }).catch(() => {\n                    alert('注文処理に失敗しました。通信環境をご確認の上、もう一度お試しください。')\n                    return false\n                })\n        }\n    }\n}\n\nexport const saveProduct = (id, name, description, category, gender, price, images, sizes) => {\n    return async (dispatch) => {\n        const timestamp = FirebaseTimestamp.now()\n\n        const data = {\n            category: category,\n            description: description,\n            gender: gender,\n            images: images,\n            name: name,\n            price: parseInt(price, 10),\n            sizes: sizes,\n            updated_at: timestamp\n        }\n\n        if(id === \"\") {\n            const ref = productsRef.doc();\n            id = ref.id\n            data.id = id\n            data.created_at = timestamp\n        }\n\n        return productsRef.doc(id).set(data, {merge: true})\n            .then(() => {\n                dispatch(push('/'))\n            })\n            .catch((error) => {\n                throw new Error(error)\n            })\n        }\n}","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport NoImage from '../../assets/img/src/no_image.png';\nimport {push} from 'connected-react-router';\nimport { useDispatch } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MOreVertIcon from '@material-ui/icons/MoreVert';\nimport {deleteProduct} from '../../reducks/products/operations'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            margin: 8,\n            width: 'calc(50% - 16px)'\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: 16,\n            width: 'calc(33.3333% - 32px)'\n        }\n    },\n    content: {\n        display: 'flex',\n        padding: '16px 8px',\n        textAlign: 'left',\n        '&:last-child': {\n            paddingBottom: 16\n        }\n    },\n    media: {\n        height: 0,\n        paddingTop: '100%'\n    },\n    price: {\n        color: theme.palette.secondary.main,\n        fontSize: 16\n    },\n}));\n\nconst ProductCard = (props) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget)\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null)\n    };\n\n    const images = (props.images.length > 0) ? props.images : [{path: NoImage}];\n    const price = props.price.toLocaleString();\n\n    return (\n        <Card className={classes.root}>\n            <CardMedia \n                className={classes.media}\n                image={images[0].path}\n                title=\"\"\n                onClick={() => dispatch(push('/product/' + props.id))}\n            />\n            <CardContent className={classes.content}>\n                <div onClick={() => dispatch(push('/product/' + props.id))}>\n                    <Typography color=\"textSecondary\" component=\"p\">\n                        {props.name}\n                    </Typography >\n                    <Typography className={classes.price}component=\"p\">\n                        ¥{price}\n                    </Typography>\n                </div>\n                <IconButton onClick={handleClick}>\n                    <MOreVertIcon />\n                </IconButton>\n                <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem\n                        onClick={() => {\n                            dispatch(push('/product/edit/' + props.id))\n                            handleClose();\n                        }}\n                    >\n                    編集する\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() => {\n                            dispatch(deleteProduct(props.id));\n                            handleClose();\n                        }}\n                    >\n                    削除する\n                    </MenuItem>\n                </Menu>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default ProductCard;","import React, {useState, useCallback, useMemo} from 'react';\nimport {TableContainer, makeStyles} from '@material-ui/core';\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\"\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport {TextInput} from '../UIkit';\n\nconst useStyles = makeStyles({\n    checkIcon: {\n        float: 'right'\n    },\n    iconCell: {\n        height: 48,\n        width: 48\n    }\n})\n\nconst SetSizeArea = (props) => {\n    const classes = useStyles();\n\n    const [index, setIndex] = useState(0),\n          [size, setSize] =useState(\"\"),\n          [quantity, setQuantity] = useState(0);\n\n    const inputSize = useCallback((event) => {\n        setSize(event.target.value)\n    }, [setSize]);\n\n    const inputQuantity = useCallback((event) => {\n        setQuantity(event.target.value)\n    }, [setQuantity]);\n\n    const addSize = (index, size, quantity) => {\n        if (size === \"\" || quantity === \"\") {\n            //Required input is blank\n            return false\n        }else {\n            if (index === props.sizes.length) {\n                props.setSizes(prevState => [...prevState, {size: size, quantity: quantity}])\n                setIndex(index + 1)\n                setSize(\"\")\n                setQuantity(0)\n            } else {\n                const newSizes = props.sizes\n                newSizes[index] = {size: size, quantity: quantity}\n                props.setSizes(newSizes)\n                setIndex(newSizes.length)\n                setSize(\"\")\n                setQuantity(0)\n            }\n        }\n    }\n\n    const editSize = (index, size, quantity) => {\n        setIndex(index)\n        setSize(size)\n        setQuantity(quantity)\n    }\n\n    const deleteSize = (deleteIndex) => {\n        const newSizes = props.sizes.filter((item, i) => i !== deleteIndex);\n        props.setSizes(newSizes)\n    }\n\n    const memoIndex = useMemo(() => {\n        setIndex(props.sizes.length)\n    }, [props.sizes.length])\n\n    return (\n        <div>\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>サイズ</TableCell>\n                            <TableCell>数量</TableCell>\n                            <TableCell className={classes.iconCell} />\n                            <TableCell className={classes.iconCell} />\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {props.sizes.length > 0 && (\n                            props.sizes.map((item, i) => (\n                                <TableRow key={item.size}>\n                                    <TableCell>{item.size}</TableCell>\n                                    <TableCell>{item.quantity}</TableCell>\n                                    <TableCell>\n                                        <IconButton className={classes.iconCell} onClick={() => editSize(i, item.size, item.quantity)}>\n                                            <EditIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                    <TableCell>\n                                        <IconButton className={classes.iconCell} onClick={() => deleteSize(i)}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        )}\n                    </TableBody>\n                </Table>\n                <div>\n                    <TextInput\n                        fullWidth={false} label={\"サイズ\"} multiline={false} required={true}\n                        onChange={inputSize} rows={1} value={size} type={\"text\"}\n                    />\n                    <TextInput\n                        fullWidth={false} label={\"数量\"} multiline={false} required={true}\n                        onChange={inputQuantity} rows={1} value={quantity} type={\"number\"}\n                    />\n                </div>\n                <IconButton className={classes.checkIcon} onClick={() => addSize(index, size, quantity)}>\n                    <CheckCircleIcon />\n                </IconButton>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default SetSizeArea;","import React from 'react';\nimport {TableContainer, makeStyles} from '@material-ui/core';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\"\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\n\nconst useStyles = makeStyles({\n    iconCell: {\n        padding: 0,\n        height: 48,\n        width: 48\n    }\n});\n\nconst SizeTable = (props) => {\n    const classes = makeStyles();\n    \n    const sizes = props.sizes;\n\n    return (\n        <TableContainer>\n            <Table>\n                <TableBody>\n                    {sizes.length > 0 && (\n                        sizes.map(size => (\n                            <TableRow key={size.size}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {size.size}\n                                </TableCell>\n                                <TableCell>\n                                    残り{size.quantity}点\n                                </TableCell>\n                                <TableCell className={classes.iconCell}>\n                                    {size.quantity > 0 ? (\n                                        <IconButton onClick={() => props.addProduct(size.size)}>\n                                            <ShoppingCartIcon  />\n                                        </IconButton>\n                                    ) : (\n                                        <div>売切</div>\n                                    )}\n                                </TableCell>\n                                <TableCell className={classes.iconCell}>\n                                    <IconButton>\n                                        <FavoriteBorderIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))\n                    )}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nexport default SizeTable;","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getProductsInCart} from \"../reducks/users/selectors\";\nimport List from \"@material-ui/core/List\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {CartListItem} from \"../components/Products\";\nimport {PrimaryButton, GreyButton} from \"../components/UIkit\";\nimport {push} from \"connected-react-router\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '0 auto',\n    maxWidth: 512,\n    width: '100%'\n  },\n}));\n\nconst CartList = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const productsInCart = getProductsInCart(selector);\n\n  const goToOrder = useCallback(() => {\n    dispatch(push('/order/confirm'))\n  }, [dispatch]);\n\n  const backToTop = useCallback(() => {\n    dispatch(push('/'))\n  }, [dispatch]);\n\n\n\n  return (\n    <section className=\"c-section-wrapin\">\n      <h2 className=\"u-text__headline\">ショッピングカート</h2>\n      <List className={classes.root}>\n        {productsInCart.length > 0 && (\n          productsInCart.map(product => <CartListItem product={product} key={product.cartId}/>)\n        )}\n      </List>\n      <div className=\"module-spacer--medium\"/>\n      <div className=\"p-grid__column\">\n        <PrimaryButton label={\"レジへ進む\"} onClick={goToOrder}/>\n        <div className=\"module-spacer--extra-extra-small\"/>\n        <GreyButton label={\"ショッピングを続ける\"} onClick={backToTop}/>\n      </div>\n    </section>\n  );\n};\nexport default CartList;","import {fetchOrdersHistoryAction, fetchProductsInCartAction, signInAction, signOutAction} from './actions';\nimport {push} from 'connected-react-router';\nimport {auth, FirebaseTimestamp, db} from '../../firebase/index'\n\nexport const addProductToCart = (addedProduct) => {\n    return async(dispatch, getState) => {\n        const uid = getState().users.uid;\n        const cartRef = db.collection('users').doc(uid).collection('cart').doc();\n        addedProduct['cartId'] = cartRef.id;\n        await cartRef.set(addedProduct)\n        dispatch(push('/'))\n    }\n}\n\nexport const fetchOrdersHistory = () => {\n    return async (dispatch, getState) => {\n        const uid = getState().users.uid;\n        const list = [];\n\n        db.collection('users').doc(uid)\n          .collection('orders')\n          .orderBy('updated_at', 'desc')\n          .get()\n          .then((snapshots) => {\n              snapshots.forEach(snapshot => {\n                  const data = snapshot.data()\n                  list.push(data)\n              })\n\n              dispatch(fetchOrdersHistoryAction(list))\n          })\n    }\n}\n\nexport const fetchProductsInCart = (products) => {\n    return async (dispatch) => {\n        dispatch(fetchProductsInCartAction(products))\n    }\n};\n\nexport const listenAuthState = () => {\n    return async (dispatch) => {\n        return auth.onAuthStateChanged(user => {\n            if(user) {\n                    const uid = user.uid\n\n                    db.collection('users').doc(uid).get()\n                        .then(snapshot => {\n                            const data = snapshot.data()\n\n                            dispatch(signInAction({\n                                isSignedIn: true,\n                                role: data.role,\n                                uid: uid,\n                                username: data.username\n                            }))\n                        })\n            } else {\n                dispatch(push('/signin'))\n            }\n        })\n    }\n}\n\nexport const resetPassword = (email) => {\n    return async (dispatch) => {\n        if(email === \"\") {\n            alert('必須項目が未入力です')\n            return false\n        } else {\n            auth.sendPasswordResetEmail(email)\n                .then(() => {\n                    alert('入力されたアドレスにパスワードリセット用のメールを送りました')\n                })\n                .catch(() => {\n                    alert('パスワードリセットに失敗しました。通信環境の良いところで再度お試しください')\n                })\n        }\n    }\n}\n\nexport const signIn = (email, password) => {\n    return async (dispatch) => {\n        // Validation\n        if (email === \"\" || password === \"\") {\n            alert(\"必須項目が未入力です\")\n            return false\n        }\n\n        auth.signInWithEmailAndPassword(email, password)\n            .then(result => {\n                const user = result.user\n\n                if (user) {\n                    const uid = user.uid\n\n                    db.collection('users').doc(uid).get()\n                        .then(snapshot => {\n                            const data = snapshot.data()\n\n                            dispatch(signInAction({\n                                isSignedIn: true,\n                                role: data.role,\n                                uid: uid,\n                                username: data.username\n                            }))\n\n                            dispatch(push('/'))\n                        })\n                }\n            })\n        }\n}\n\nexport const signUp = (username, email, password, confirmPassWord) => {\n    return async (dispatch) => {\n        // Validation\n        if (username === \"\" || email === \"\" || password === \"\" || confirmPassWord === \"\") {\n            alert(\"必須項目が未入力です\")\n            return false\n        }\n\n        if (password !== confirmPassWord) {\n            alert(\"パスワードが一致しません。もう一度お試しください\")\n            return false\n        }\n\n        return auth.createUserWithEmailAndPassword(email, password)\n            .then(result => {\n                const user = result.user\n\n                if (user) {\n                    const uid = user.uid\n                    const timestamp = FirebaseTimestamp.now()\n\n                    const userInitialdata = {\n                        created_at: timestamp,\n                        email: email,\n                        uid: uid,\n                        updated_at: timestamp,\n                        username: username\n                    }\n\n                    db.collection('users').doc(uid).set(userInitialdata)\n                        .then(() => {\n                            dispatch(push('/'))\n                        })\n                }\n            })\n    }\n}\n\nexport const signOut = () => {\n    return async (dispatch) => {\n        auth.signOut()\n            .then(() => {\n                dispatch(signOutAction());\n                dispatch(push('/signin'))\n            })\n    }\n}","import React, {useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getProductsInCart} from \"../reducks/users/selectors\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {CartListItem} from \"../components/Products\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {PrimaryButton, TextDetail} from \"../components/UIkit\";\nimport {orderProduct} from '../reducks/products/operations';\n\nconst useStyles = makeStyles((theme) => ({\n    detailBox: {\n        margin: '0 auto',\n        [theme.breakpoints.down('sm')]: {\n            width:320\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 512\n        }\n    },\n    orderBox: {\n        border: '1px solid rgba(0, 0, 0, 0.2)',\n        borderRadius: 4,\n        boxShadow: '0 4px 2px 2px rgba(0, 0, 0, 0.2)',\n        height: 256,\n        margin: '24px auto 16px auto',\n        padding: 16,\n        width: 288\n    }\n}));\n\nconst OrderConfirm = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const productsInCart = getProductsInCart(selector);\n\n    const subTotal = useMemo(() => {\n        return productsInCart.reduce((sum, product) => sum += product.price, 0)\n    }, [productsInCart]);\n\n    const shippingFee = (subTotal >= 10000) ? 0 : 210;\n\n    const tax = subTotal * 0.1;\n\n    const total = subTotal + shippingFee + tax;\n\n    const order = useCallback(() => {\n        dispatch(orderProduct(productsInCart, total))\n    }, [productsInCart, total]);\n\n    return (\n        <section className=\"c-section-wrapin\">\n            <h2 className=\"u-text__headline\">注文の確認</h2>\n            <div className=\"p-grid__row\">\n                <div className={classes.detailBox}>\n                    <List>\n                        {productsInCart.length > 0 && (\n                            productsInCart.map(product => <CartListItem product={product} key={product.cartId} />)\n                        )}\n                    </List>\n                </div>\n                <div className={classes.orderBox}>\n                            <TextDetail label={\"商品合計\"} value={subTotal.toLocaleString()} />\n                            <TextDetail label={\"消費税\"} value={\"¥\" + tax} />\n                            <TextDetail label={\"送料\"} value={\"¥\" + shippingFee.toLocaleString()} />\n                            <Divider />\n                            <TextDetail label={\"合計（税込）\"} value={\"¥\" + total.toLocaleString()} />\n                            <PrimaryButton label={\"注文する\"} onClick={order} />\n                </div>\n            </div>\n        </section>\n    )\n};\n\nexport default OrderConfirm;","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport List from \"@material-ui/core/List\"\nimport {makeStyles} from \"@material-ui/styles\";\nimport { getOrdersHistory } from '../reducks/users/selectors';\nimport { useEffect } from 'react';\nimport {fetchOrdersHistory} from '../reducks/users/operations';\nimport {OrderHistoryItem} from '../components/Products';\n\nconst useStyles = makeStyles((theme) => ({\n    orderList: {\n        background: theme.palette.grey[\"100\"],\n        margin: '0 auto',\n        padding: 32,\n        [theme.breakpoints.down('md')]: {\n            width: '100%'\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 768\n        }\n    }\n}));\n\nconst OrderHistory = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const orders = getOrdersHistory(selector);\n\n    useEffect(() => {\n        dispatch(fetchOrdersHistory())\n    }, []);\n\n\n    return (\n        <section className=\"c-section-wrapin\">\n            <List className={classes.orderList}>\n                {orders.length > 0 && (\n                    orders.map(order => <OrderHistoryItem order={order} key={order.id} />)\n                )}\n            </List>\n        </section>\n    )\n}\n\nexport default OrderHistory;","import React,{useState, useCallback, useEffect} from 'react'\nimport { SelectBox, TextInput, PrimaryButton } from '../components/UIkit';\nimport { useDispatch } from 'react-redux';\nimport {saveProduct} from \"../reducks/products/operations\";\nimport ImageArea from '../components/Products/ImageArea';\nimport {db} from \"../firebase/index\";\nimport { SetSizeArea } from '../components/Products';\n\nconst ProductEdit = () => {\n    const dispatch = useDispatch();\n    let id = window.location.pathname.split('/product/edit')[1];\n\n    if(id !== \"\" ) {\n        id = id.split('/')[1]\n    }\n\n    const [name, setName] = useState(\"\"),\n          [description, setDescription] = useState(\"\"),\n          [category, setCategory] = useState(\"\"),\n          [categories, setCategories] = useState([]),\n          [gender, setGender] = useState(\"\"),\n          [images, setImages] = useState([]),\n          [price, setPrice] = useState(\"\"),\n          [sizes, setSizes] = useState([]);\n\n    const inputName = useCallback((event) => {\n        setName(event.target.value)\n    }, [setName]);\n\n    const inputDescription = useCallback((event) => {\n        setDescription(event.target.value)\n    }, [setDescription]);\n\n    const inputPrice = useCallback((event) => {\n        setPrice(event.target.value)\n    }, [setPrice]);\n\n    const genders = [\n        {id: \"all\", name:\"すべて\"},\n        {id: \"male\", name:\"メンズ\"},\n        {id: \"female\", name:\"レディース\"},\n    ];\n\n    useEffect( () => {\n        if ( id !== \"\") {\n            db.collection('products').doc(id).get()\n                .then(snapshot => {\n                    const data = snapshot.data();\n                    setImages(data.images);\n                    setName(data.name);\n                    setDescription(data.description);\n                    setCategory(data.category);\n                    setGender(data.gender);\n                    setPrice(data.price);\n                    setSizes(data.sizes);\n                })\n        }\n    }, [id]);\n\n    useEffect(() => {\n        db.collection('categories')\n            .orderBy('order', 'asc')\n            .get()\n            .then(snapshots => {\n                const list = []\n                snapshots.forEach(snapshot => {\n                    const data = snapshot.data()\n                    list.push({\n                        id: data.id,\n                        name: data.name\n                    })\n                })\n                setCategories(list)\n            })\n    }, []);\n\n    return (\n        <section>\n            <h2 className=\"u-text__headline u-text-center\">商品の登録・編集</h2>\n            <div className=\"c-section-container-2\">\n                <ImageArea images={images} setImages={setImages} />\n                <TextInput \n                    fullwidth={true} label={\"商品名\"} multiline={false} required={true}\n                    onChange={inputName} rows={1} value={name} type={\"text\"}\n                />\n                <TextInput \n                    fullwidth={true} label={\"商品説明\"} multiline={true} required={true}\n                    onChange={inputDescription} rows={5} value={description} type={\"text\"}\n                />\n                <SelectBox \n                    label={\"カテゴリー\"} required={true} options={categories} select={setCategory} value={category}\n                />\n                <SelectBox \n                    label={\"性別\"} required={true} options={genders} select={setGender} value={gender}\n                />\n                <TextInput \n                    fullwidth={true} label={\"価格\"} multiline={false} required={true}\n                    onChange={inputPrice} rows={1} value={price} type={\"number\"}\n                />\n                <div className=\"module-spacer--small\" />\n                <SetSizeArea sizes={sizes} setSizes={setSizes} />\n                <div className=\"module-spacer--small\" />\n                <div className=\"center\">\n                    <PrimaryButton \n                        label={\"商品情報を保存\"}\n                        onClick={() => dispatch(saveProduct(id, name, description, category, gender, price, images, sizes))}\n                    />\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default ProductEdit;","import {createSelector} from 'reselect';\n\nconst productsSelector = (state) => state.products;\n\nexport const getProducts = createSelector(\n    [productsSelector],\n    state => state.list\n)","import React, { useEffect } from 'react';\nimport {ProductCard} from \"../components/Products/index\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {fetchProducts} from \"../reducks/products/operations\";\nimport {getProducts} from \"../reducks/products/selectors\";\n\nconst ProductList = () => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const products = getProducts(selector);\n\n    const query = selector.router.location.search;\n    const gender = /^\\?gender=/.test(query) ? query.split('?gender=')[1] : \"\";\n    const category = /^\\?category=/.test(query) ? query.split('?category=')[1] : \"\";\n\n    useEffect(() => {\n        dispatch(fetchProducts(gender, category))\n    },[query]);\n\n    return (\n        <section className=\"c-section-wrapin\">\n            <div className=\"p-grid__row\">\n                {products.length > 0 && (\n                    products.map(product => (\n                        <ProductCard \n                            key={product.id} id={product.id} name={product.name}\n                            images={product.images} price={product.price}\n                        />\n                    ))\n                )}\n            </div>\n        </section>\n    )\n}\n\nexport default ProductList;","import React, {useCallback, useState } from 'react';\nimport {PrimaryButton, TextInput} from '../components/UIkit';\nimport {signIn} from '../reducks/users/operations';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nconst SignIn = () => {\n    const dispatch = useDispatch()\n\n    const   [email, setEmail] = useState(\"\"),\n            [password, setPassword] = useState(\"\");\n\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail]);\n\n    const inputPassword = useCallback((event) => {\n        setPassword(event.target.value)\n    },[setPassword]);\n\n    return (\n        <div className=\"c-section-container\">\n            <h2 className=\"u-text__headline u-text-center\">サインイン</h2>\n            <div className=\"module-spacer--medium\" />\n            <TextInput \n                fullWidth={true} label={\"メールアドレス\"} multiline={false} required={true}\n                rows={1} value={email} type={\"email\"} onChange={inputEmail}\n            />\n            <TextInput \n                fullWidth={true} label={\"パスワード\"} multiline={false} required={true}\n                rows={1} value={password} type={\"password\"} onChange={inputPassword}\n            />\n            <div className=\"module-spacer--medium\" />\n            <div className=\"center\">\n                <PrimaryButton \n                    label={\"サインイン\"}\n                    onClick={() => dispatch(signIn(email, password))}\n                />\n                <div className=\"module-spacer--medium\" />\n                <p onClick={() => dispatch(push('/signUp'))}>アカウントをお持ちでない方はこちら</p>\n                <p onClick={() => dispatch(push('/signin/reset'))}>パスワードを忘れた方はこちら</p>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn;","import React, {useCallback, useState } from 'react';\nimport {PrimaryButton, TextInput} from '../components/UIkit';\nimport {signUp} from '../reducks/users/operations';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nconst SignUp = () => {\n    const dispatch = useDispatch()\n\n    const [username, setUsername] = useState(\"\"),\n          [email, setEmail] = useState(\"\"),\n          [password, setPassword] = useState(\"\"),\n          [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const inputUsername = useCallback((event) => {\n        setUsername(event.target.value)\n    },[setUsername]);\n\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail]);\n\n    const inputPassword = useCallback((event) => {\n        setPassword(event.target.value)\n    },[setPassword]);\n\n    const inputConfirmPassword = useCallback((event) => {\n        setConfirmPassword(event.target.value)\n    },[setConfirmPassword]);\n\n    return (\n        <div className=\"c-section-container\">\n            <h2 className=\"u-text__headline u-text-center\">アカウント登録</h2>\n            <div className=\"module-spacer--medium\" />\n            <TextInput \n                fullWidth={true} label={\"ユーザー名\"} multiline={false} required={true}\n                rows={1} value={username} type={\"text\"} onChange={inputUsername}\n            />\n            <TextInput \n                fullWidth={true} label={\"メールアドレス\"} multiline={false} required={true}\n                rows={1} value={email} type={\"email\"} onChange={inputEmail}\n            />\n            <TextInput \n                fullWidth={true} label={\"パスワード\"} multiline={false} required={true}\n                rows={1} value={password} type={\"password\"} onChange={inputPassword}\n            />\n            <TextInput \n                fullWidth={true} label={\"パスワードの確認\"} multiline={false} required={true}\n                rows={1} value={confirmPassword} type={\"password\"} onChange={inputConfirmPassword}\n            />\n            <div className=\"module-spacer--medium\" />\n            <div className=\"center\">\n                <PrimaryButton \n                    label={\"アカウントを登録する\"}\n                    onClick={() => dispatch(signUp(username, email, password, confirmPassword))}\n                />\n                <div className=\"module-spacer--medium\" />\n                <p onClick={() => dispatch(push('/signin'))}>アカウントをお持ちの方はこちら</p>\n                <p onClick={() => dispatch(push('/signin/reset'))}>パスワードを忘れた方はこちら</p>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp;","import React, {useCallback, useState } from 'react';\nimport {PrimaryButton, TextInput} from '../components/UIkit';\nimport {resetPassword} from '../reducks/users/operations';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nconst Reset = () => {\n    const dispatch = useDispatch()\n\n    const   [email, setEmail] = useState(\"\");\n\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail]);\n\n    return (\n        <div className=\"c-section-container\">\n            <h2 className=\"u-text__headline u-text-center\">パスワードのリセット</h2>\n            <div className=\"module-spacer--medium\" />\n            <TextInput \n                fullWidth={true} label={\"メールアドレス\"} multiline={false} required={true}\n                rows={1} value={email} type={\"email\"} onChange={inputEmail}\n            />\n            <div className=\"module-spacer--medium\" />\n            <div className=\"center\">\n                <PrimaryButton \n                    label={\"Reset password\"}\n                    onClick={() => dispatch(resetPassword(email))}\n                />\n                <div className=\"module-spacer--medium\" />\n                <p onClick={() => dispatch(push('/signIn'))}>ログイン画面に戻る</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Reset;","import React, {useState, useEffect, useCallback} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {db, FirebaseTimestamp} from '../firebase/index';\nimport {makeStyles} from \"@material-ui/styles\";\nimport {ImageSwiper, SizeTable} from \"../components/Products/index\";\nimport {addProductToCart} from '../reducks/users/operations';\nimport {returnCodeToBr} from \"../function/common\";\n\nconst useStyles = makeStyles((theme) => ({\n    sliderBox: {\n       [theme.breakpoints.down('sm')]: {\n            margin: '0 auto 24px auto',\n            height: 320,\n            width: 320\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: '0 auto',\n            height: 400,\n            width: 400\n        }\n    },\n    detail: {\n        textAlign: 'left',\n        [theme.breakpoints.down('sm')]: {\n            margin: '0 auto 16px auto',\n            height: 'auto',\n            width: 320\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: '0 auto',\n            height: 'auto',\n            width: 400\n        }\n    },\n    price: {\n        fontSize: 36\n    }\n}));\n\n// const returnCodeToBr = (text) => {\n//     if(text === \"\") {\n//         return text\n//     }else {\n//         return HTMLReactParser(text.replace(/\\r?\\n/g, '<br/>'))\n//     }\n// };\n\nconst ProductDetail = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const path = selector.router.location.pathname;\n    const id = path.split('/product/')[1];\n\n    const [product, setProduct] = useState(null);\n\n    useEffect(() => {\n        db.collection('products').doc(id).get()\n            .then(doc => {\n                const data = doc.data();\n                setProduct(data)\n            })\n    },[]);\n\n    const addProduct = useCallback((selectedSize) => {\n        const timestamp = FirebaseTimestamp.now();\n        dispatch(addProductToCart({\n            added_at: timestamp,\n            description: product.description,\n            gender: product.gender,\n            images: product.images,\n            name: product.name,\n            price: product.price,\n            productId: product.id,\n            quantity: 1,\n            size: selectedSize\n        }))\n    }, [product]);\n\n    return (\n        <section className=\"c-section-wrapin\">\n            {product && (\n                <div className=\"p-grid__row\">\n                    <div className={classes.sliderBox}>\n                        <ImageSwiper images={product.images} />\n                    </div>\n                    <div className={classes.detail}>\n                        <h2 className=\"u-text__headline\">{product.name}</h2>\n                        <p className={classes.price}>{product.price.toLocaleString()}</p>\n                        <div className=\"module-spacer--small\" />\n                        <SizeTable addProduct={addProduct} sizes={product.sizes} />\n                        <div className=\"module-spacer--small\" />\n                        <p>{returnCodeToBr(product.description)}</p>\n                    </div>\n                </div>\n            )}\n        </section>\n    )\n};\n\nexport default ProductDetail;","import {storage} from \"../firebase/index\";\nimport HTMLReactParser from \"html-react-parser\";\n\n/**\n * When user select an image file from his local directory, upload it to Firebase Storage, get download URL,\n * and set the URL to the src property of img tag for displaying the thumbnail.\n * @param {string} id The identifier of input tag for uploading files\n */\n\nexport const attachFiles = (id, type) => {\n    if (type === 'remove') {\n        return document.getElementById(id).removeEventListener('change', () => null);\n    } else if (type === 'add') {\n        document.getElementById(id).addEventListener(\"change\", (event)=> {\n            const file = event.target.files;\n            // @ts-ignore\n            let blob = new Blob(file, { type: \"image/jpeg\" });\n\n            // Generate random 16 digits strings\n            const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n            const N=16;\n            const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n\n            const uploadRef = storage.ref('images').child(fileName);\n            const uploadTask = uploadRef.put(blob);\n            uploadTask.on('state_changed', (snapshot) => {\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log('Upload is ' + progress + '% done');\n            }, (error) => {\n                // Handle unsuccessful uploads\n                console.error(\"Failed to upload file. ERROR: \", error);\n            }, () => {\n                // Handle successful uploads on complete\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                    console.log('File available at', downloadURL);\n                    document.getElementById(`${id}-thumb`).setAttribute('src', downloadURL);\n                });\n            });\n        });\n    }\n\n};\n\n\n/**\n * Convert Carriage Return and Line Feed into <br> tag.\n * @param {string} text The row text\n * @returns {void | string | never} The formatted text\n */\nexport const returnCodeToBr = (text) => {\n    if (text === \"\") {\n        return text\n    } else {\n        return HTMLReactParser(text.replace(/\\r?\\n/g, '<br/>'))\n    }\n};\n\n\n/**\n * Convert datetime into the String.\n * @param {Date} dt\n * @returns {string} \"YYYY-MM-DD\"\n */\nexport const dateToString = (dt) => {\n    return dt.getFullYear() + '-'\n        + ('00' + (dt.getMonth()+1)).slice(-2) + '-'\n        + ('00' + dt.getDate()).slice(-2)\n};\n\n\n/**\n * Convert datetime into the String.\n * @param {Date} dt\n * @returns {string} \"YYYY-MM-DD\"\n */\nexport const datetimeToString = (dt) => {\n    return dt.getFullYear() + '-'\n        + ('00' + (dt.getMonth()+1)).slice(-2) + '-'\n        + ('00' + dt.getDate()).slice(-2) + ' '\n        + ('00' + dt.getHours()).slice(-2) + ':'\n        + ('00' + dt.getMinutes()).slice(-2) + ':'\n        + ('00' + dt.getSeconds()).slice(-2)\n};\n\n\n/**\n * Validate input email\n * @param email\n * @returns {boolean}\n */\nexport const isValidEmailFormat = (email) => {\n    const regex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n    return regex.test(email)\n}\n\n\n/**\n * Show an alert if required input is blank\n * @param args Required input values\n * @returns {boolean}\n */\nexport const isValidRequiredInput = (...args) => {\n    let validator = true;\n    for (let i=0; i < args.length; i=(i+1)|0) {\n        if (args[i] === \"\") {\n            validator = false;\n        }\n    }\n    return validator\n};","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {getIsSignedIn} from \"./reducks/users/selectors\";\nimport { listenAuthState } from './reducks/users/operations';\n\nconst Auth = ({children}) => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const isSignedIn = getIsSignedIn(selector);\n\n    useEffect(() => {\n        if (!isSignedIn) {\n            dispatch(listenAuthState())\n        }\n    }, []);\n    \n    if(!isSignedIn) {\n        return <></>\n    }else {\n        return children\n    }\n}\n\nexport default Auth;","import React from 'react';\nimport {Switch, Route} from 'react-router';\nimport {CartList, SignIn, SignUp, Reset, ProductEdit, ProductList, ProductDetail, OrderConfirm, OrderHistory} from './templates';\nimport Auth from './Auth'\n\n\nconst Router = () => {\n    return(\n        <Switch>\n            <Route exact path={\"/signup\"} component={SignUp} />\n            <Route exact path={\"/signin\"} component={SignIn} />\n            <Route exact path={\"/signin/reset\"} component={Reset} />\n            <Auth>\n                <Route exact path={\"(/)?\"} component={ProductList} />\n                <Route exact path={\"/product/:id\"} component={ProductDetail} />\n                <Route path={\"/product/edit(/:id)?\"} component={ProductEdit} />\n\n                <Route exact path={\"/cart\"} component={CartList} />\n                <Route exact path={\"/order/confirm\"} component={OrderConfirm} />\n                <Route exact path={\"/order/history\"} component={OrderHistory} />\n            </Auth>\n        </Switch>\n    )\n}\n\nexport default Router;","import React from 'react';\nimport Divider from \"@material-ui/core/Divider\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport {makeStyles} from \"@material-ui/styles\";\nimport IconButton from \"@material-ui/core/IconButton\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {TextInput} from '../UIkit/index';\nimport { useCallback, useState, useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport {signOut} from '../../reducks/users/operations';\nimport {db} from '../../firebase/index';\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            flexShrink: 0,\n            width: 256\n        }\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPapper: {\n        width: 256\n    },\n    searchField: {\n        alignItems: 'center',\n        display: 'flex',\n        marginLeft: 32\n    }\n}))\n\nconst ClosableDrawer = (props) => {\n    const classes = useStyles()\n    const {container} = props;\n    const dispatch = useDispatch();\n\n    const [keyword, setKeyword] = useState(\"\");\n\n    const inputKeyWord = useCallback((event) => {\n        setKeyword(event.target.value)\n    }, [setKeyword])\n\n    const selectMenu = (event, path) => {\n        dispatch(push(path));\n        props.onClose(event)\n    }\n\n    const [filters, setFilters] = useState( [\n        {func: selectMenu, label: \"全て\",  id: \"all\", value: \"/\"},\n        {func: selectMenu, label: \"メンズ\",  id: \"male\", value: \"/?gender=male\"},\n        {func: selectMenu, label: \"レディース\",  id: \"female\", value: \"/?gender=female\"}\n    ])\n\n    const menus = [\n        {func: selectMenu, label: \"商品登録\", icon: <AddCircleIcon />, id: \"register\", value: \"/product/edit\"},\n        {func: selectMenu, label: \"注文履歴\", icon: <HistoryIcon />, id: \"history\", value: \"/order/history\"},\n        {func: selectMenu, label: \"プロフィール\", icon: <PersonIcon />, id: \"profile\", value: \"/user/mypage\"}\n    ];\n\n    useEffect(() => {\n        db.collection('categories')\n        .orderBy('order', 'asc')\n        .get()\n        .then(snapshots => {\n            const list = []\n            snapshots.forEach(snapshot => {\n                const category = snapshot.data()\n                list.push( {func: selectMenu, label: category.name,  id: category.id, value: `/?category=${category.id}`})\n            })\n            setFilters(prevState => [...prevState, ...list])\n        })\n    }, []);\n\n    return (\n        <nav className={classes.drawer}>\n            <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor=\"right\"\n                open={props.open}\n                onClose={(e) => props.onClose(e)}\n                classes={{paper: classes.drawerPapper}}\n                ModalProps={{keepMounted: true}}\n            >\n                <div\n                    onClose={(e)=> props.onClose(e)}\n                    onKeyDown={(e)=> props.onClose(e)}\n                >\n                    <div className={classes.searchField}>\n                        <TextInput\n                            fullWidth={false} label={\"キーワードを入力\"} multiline={false}\n                            onChange={inputKeyWord} required={false} rows={1} value={keyword} type={\"text\"}\n                        />\n                        <IconButton>\n                            <SearchIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {menus.map(menu => (\n                            <ListItem button key={menu.id} onClick={(e) => menu.func(e, menu.value)}>\n                                <ListItemIcon>\n                                    {menu.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={menu.label} />\n                            </ListItem>\n                        ))}\n                        <ListItem button key=\"logout\" onClick={() => dispatch(signOut())}>\n                            <ListItemIcon>\n                                <ExitToAppIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={\"Logout\"} />\n                        </ListItem>\n                    </List>\n                    <Divider />\n                    <List>\n                        {filters.map(filter => (\n                            <ListItem \n                                button \n                                key={filter.id}\n                                onClick={(e) => filter.func(e, filter.value)}    \n                            >\n                                <ListItemText primary={filter.label} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n        </nav>\n    )\n}\n\nexport default ClosableDrawer;","export default __webpack_public_path__ + \"static/media/logo2.df6e5128.png\";","import React from 'react';\nimport {makeStyles} from \"@material-ui/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/ToolBar\";\nimport logo from '../../assets/img/icons/logo2.png';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { getIsSignedIn } from '../../reducks/users/selectors';\nimport {push} from 'connected-react-router';\nimport {HeaderMenus, ClosableDrawer} from './index';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\n \nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    menuBar: {\n        backgroundColor: \"#fff\",\n        color: \"#444\",\n    },\n    toolBar: {\n        margin: '0 auto',\n        maxWidth: 1024,\n        width: '100%'\n    },\n    iconButoons: {\n        margin: '0 0 0 auto'\n    }\n});\n\nconst Header = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state)\n    const isSignedIn = getIsSignedIn(selector)\n\n    const [open, setOpen] = useState(false);\n\n    const handleDrawerToggle = useCallback((event) => {\n        if(event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setOpen(!open);\n    }, [setOpen, open])\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.menuBar}>\n                <ToolBar className={classes.toolBar} >\n                    <img \n                        src={logo} alt=\"Tatsuya Logo\" width=\"160px\" \n                        onClick={() => dispatch(push('/'))}\n                    />\n                    {isSignedIn && (\n                        <div className={classes.iconButoons}>\n                            <HeaderMenus handleDrawerToggle={handleDrawerToggle} />\n                        </div>\n                    )}\n                </ToolBar>\n            </AppBar>\n            <ClosableDrawer open={open} onClose={handleDrawerToggle} />\n        </div>\n    )\n};\n\nexport default Header;","import React from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\"\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { getProductsInCart, getUserId } from '../../reducks/users/selectors';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { useEffect } from 'react';\nimport {db} from '../../firebase/index';\nimport { fetchProductsInCart } from '../../reducks/users/operations';\nimport {push} from \"connected-react-router\";\n\nconst HeaderMenus = (props) => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const uid = getUserId(selector);\n    let productsInCart = getProductsInCart(selector);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(uid).collection('cart')\n            .onSnapshot(snapshots => {\n                snapshots.docChanges().forEach(change => {\n                    const product = change.doc.data();\n                    const changeType = change.type;\n\n                    switch (changeType) {\n                        case 'added':\n                            productsInCart.push(product);\n                            break;\n                        case 'modified':\n                            const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                            productsInCart[index] = product\n                            break;\n                        case 'removed':\n                            productsInCart = productsInCart.filter(product => product.id)\n                            break;\n                        default:\n                            break;\n                    }\n                })\n\n                dispatch(fetchProductsInCart(productsInCart))\n            })\n        return () => unsubscribe()\n    }, []);\n\n    return (\n        <>\n            <IconButton onClick={() => dispatch(push('/cart'))}>\n                <Badge badgeContent={productsInCart.length} color=\"secondary\" >\n                    <ShoppingCartIcon />\n                </Badge>\n            </IconButton>\n            <IconButton>\n                <FavoriteBorderIcon />\n            </IconButton>\n            <IconButton onClick={(event) => props.handleDrawerToggle(event)}>\n                <MenuIcon />\n            </IconButton>\n        </>\n    )\n};\n\nexport default HeaderMenus;","import React from 'react';\nimport Router from './Router';\nimport \"./assets/reset.css\";\nimport \"./assets/style.css\";\nimport { Header } from './components/Header';\n\nconst App = () => {\n  return(\n    <>\n      <Header />\n      <main className=\"c-main\">\n        <Router />\n      </main>\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport createStore from './reducks/store/store';\nimport {ConnectedRouter} from 'connected-react-router';\nimport * as History from 'history';\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport {theme} from \"./assets/theme\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <ConnectedRouter history={history}>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}